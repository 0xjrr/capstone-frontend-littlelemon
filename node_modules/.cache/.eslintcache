[{"/home/jrr/capstone_frontend_littlelemon/src/index.js":"1","/home/jrr/capstone_frontend_littlelemon/src/App.js":"2","/home/jrr/capstone_frontend_littlelemon/src/reportWebVitals.js":"3","/home/jrr/capstone_frontend_littlelemon/src/components/Header.js":"4","/home/jrr/capstone_frontend_littlelemon/src/components/Footer.js":"5","/home/jrr/capstone_frontend_littlelemon/src/data/links.js":"6","/home/jrr/capstone_frontend_littlelemon/src/components/ReservePage.js":"7","/home/jrr/capstone_frontend_littlelemon/src/components/HomePage.js":"8","/home/jrr/capstone_frontend_littlelemon/src/components/HeroSection.js":"9","/home/jrr/capstone_frontend_littlelemon/src/components/Location.js":"10","/home/jrr/capstone_frontend_littlelemon/src/components/ButtonYellow.js":"11","/home/jrr/capstone_frontend_littlelemon/src/components/SpecialsSection.js":"12","/home/jrr/capstone_frontend_littlelemon/src/components/CardSpecial.js":"13","/home/jrr/capstone_frontend_littlelemon/src/data/menuItems.js":"14","/home/jrr/capstone_frontend_littlelemon/src/data/specialsItems.js":"15","/home/jrr/capstone_frontend_littlelemon/src/components/AboutPage.js":"16","/home/jrr/capstone_frontend_littlelemon/src/components/MenuPage.js":"17","/home/jrr/capstone_frontend_littlelemon/src/components/HeroSectionReserve.js":"18","/home/jrr/capstone_frontend_littlelemon/src/components/AboutSectionLarge.js":"19","/home/jrr/capstone_frontend_littlelemon/src/components/MenuSection.js":"20","/home/jrr/capstone_frontend_littlelemon/src/components/AboutSection.js":"21","/home/jrr/capstone_frontend_littlelemon/src/components/ReserveSection.js":"22","/home/jrr/capstone_frontend_littlelemon/src/hooks/useSubmit.js":"23","/home/jrr/capstone_frontend_littlelemon/src/hooks/api.js":"24"},{"size":535,"mtime":1681406582986,"results":"25","hashOfConfig":"26"},{"size":975,"mtime":1682167364018,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1681406582986,"results":"28","hashOfConfig":"26"},{"size":1690,"mtime":1682443578502,"results":"29","hashOfConfig":"26"},{"size":2963,"mtime":1682443580712,"results":"30","hashOfConfig":"26"},{"size":583,"mtime":1682190500796,"results":"31","hashOfConfig":"26"},{"size":276,"mtime":1682167364018,"results":"32","hashOfConfig":"26"},{"size":324,"mtime":1682167364018,"results":"33","hashOfConfig":"26"},{"size":1286,"mtime":1682168696108,"results":"34","hashOfConfig":"26"},{"size":332,"mtime":1681991567606,"results":"35","hashOfConfig":"26"},{"size":331,"mtime":1681865540023,"results":"36","hashOfConfig":"26"},{"size":1466,"mtime":1682444847082,"results":"37","hashOfConfig":"26"},{"size":1296,"mtime":1682444283392,"results":"38","hashOfConfig":"26"},{"size":3251,"mtime":1682167364018,"results":"39","hashOfConfig":"26"},{"size":1416,"mtime":1682444063232,"results":"40","hashOfConfig":"26"},{"size":262,"mtime":1682167364018,"results":"41","hashOfConfig":"26"},{"size":244,"mtime":1682167364018,"results":"42","hashOfConfig":"26"},{"size":1101,"mtime":1682169211108,"results":"43","hashOfConfig":"26"},{"size":2543,"mtime":1682188774116,"results":"44","hashOfConfig":"26"},{"size":1053,"mtime":1682443604092,"results":"45","hashOfConfig":"26"},{"size":1890,"mtime":1682167364018,"results":"46","hashOfConfig":"26"},{"size":8682,"mtime":1682443477592,"results":"47","hashOfConfig":"26"},{"size":1046,"mtime":1682185643386,"results":"48","hashOfConfig":"26"},{"size":566,"mtime":1682442124642,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"toli6c",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jrr/capstone_frontend_littlelemon/src/index.js",[],[],[],"/home/jrr/capstone_frontend_littlelemon/src/App.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/reportWebVitals.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/Header.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/Footer.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/data/links.js",[],[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/ReservePage.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/HomePage.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/HeroSection.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/Location.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/ButtonYellow.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/SpecialsSection.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/CardSpecial.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/data/menuItems.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/data/specialsItems.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/AboutPage.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/MenuPage.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/HeroSectionReserve.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/AboutSectionLarge.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/MenuSection.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/AboutSection.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/components/ReserveSection.js",["125"],[],"import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n    Text,\n    Box,\n    VStack,\n    Spacer,\n    Flex,\n    HStack,\n    FormControl,\n    FormLabel,\n    Input,\n    FormErrorMessage,\n    Button,\n    Image,\n    Textarea,\n    Select,\n} from \"@chakra-ui/react\";\nimport * as Yup from 'yup';\nimport useSubmit from \"../hooks/useSubmit\";\nimport formImage from '../images/restaurant.jpg';\nimport { submitAPI, fetchAPI } from \"../hooks/api\"\n\n\nconst ReserveSection = () => {\n    const { isLoading, response, submit } = useSubmit();\n    const [reserved, setReserved] = useState(\"Reserve\")\n    const [reservedLocked, setReservedLocked] = useState(false)\n    const [timeSlots, setTimeSlots] = useState(['Select date',])\n    const [dateField, setDateField] = useState('')\n    const [timeFieldLocked, setTimeFieldLocked] = useState(true)\n\n\n    const formik = useFormik({\n        initialValues: {\n            firstName: '',\n            email: '',\n            comment: '',\n            dateTime: '',\n            numberGuests: '',\n        },\n        onSubmit: (values) => {\n            submit('', values);\n            submitAPI(values);\n\n        },\n        validationSchema: Yup.object({\n            firstName: Yup.string().required('Required.'),\n            email: Yup.string().email().required('Invalid email address.'),\n            comment: Yup.string(),\n            dateTime: Yup.string().required('Required.'),\n            numberGuests: Yup.number().min(1, 'Number should be greater or equal to 1.').max(10, 'For larger groups, call us.').required('Required. Number should be between 1 and 10. For larger groups, call us.')\n        }),\n    });\n\n    const handleDateFieldChange = (event) => {\n        formik.handleChange(event)\n        setDateField(event.target.value)\n    }\n    useEffect(() => {\n        console.log('Field' + dateField)\n        if (dateField !== '') {\n            let dateObject = new Date(dateField)\n            console.log(dateObject)\n            const slots = fetchAPI(dateObject)\n            console.log(slots)\n            setTimeSlots(slots)\n            setTimeFieldLocked(false)\n        }\n    }, [dateField])\n\n    useEffect(() => {\n        const resetFormFunc = () => {\n            setReserved(\"Successfully Reserved!\")\n            setReservedLocked(true)\n            setTimeSlots(['Select date',])\n            setTimeFieldLocked(true)\n            setDateField('')\n            formik.resetForm();\n        }\n        if (response) {\n            if (response.type === \"success\") {\n                resetFormFunc()            \n            } else {\n                setReserved(\"Try again!\")\n            }\n        }\n    }, [response]);\n\n    return (\n        <Box margin={\"80px 188px\"}>\n            <VStack>\n                <Flex width={\"100%\"}>\n                    <Box width={\"300px\"}>\n                        <Text fontSize={\"18pt\"}>\n                            Reserve a Table\n                        </Text>\n                    </Box>\n                    <Spacer />\n                </Flex>\n                <Spacer />\n                <HStack width={\"100%\"}>\n                    <Box width={\"50%\"} left={\"0px\"} position={\"relative\"}>\n\n                        <form onSubmit={formik.handleSubmit}>\n                            <VStack spacing={8} width={\"100%\"}>\n                                <FormControl isInvalid={formik.touched.firstName && formik.errors.firstName}>\n                                    <FormLabel htmlFor=\"firstName\">Name</FormLabel>\n                                    <Input\n                                        id=\"firstName\"\n                                        name=\"firstName\"\n                                        {...formik.getFieldProps(\"firstName\")}\n                                    />\n                                    <FormErrorMessage>{formik.errors.firstName}</FormErrorMessage>\n                                </FormControl>\n                                <FormControl isInvalid={formik.touched.email && formik.errors.email}>\n                                    <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                                    <Input\n                                        id=\"email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        {...formik.getFieldProps(\"email\")}\n                                    />\n                                    <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\n                                </FormControl>\n                                <FormControl isInvalid={formik.touched.numberGuests && formik.errors.numberGuests}>\n                                    <FormLabel htmlFor=\"numberGuests\">Number of People</FormLabel>\n                                    <Input\n                                        id=\"numberGuests\"\n                                        name=\"numberGuests\"\n                                        type=\"number\"\n                                        {...formik.getFieldProps(\"numberGuests\")}\n                                    />\n                                    <FormErrorMessage>{formik.errors.numberGuests}</FormErrorMessage>\n                                </FormControl>\n                                <HStack width={\"100%\"}>\n\n                                    <FormControl isInvalid={formik.touched.dateTime && formik.errors.dateTime}>\n                                        <FormLabel htmlFor=\"dateTime\">Date</FormLabel>\n                                        <Input\n                                            id=\"dateTime\"\n                                            name=\"dateTime\"\n                                            type=\"date\"\n                                            {...formik.getFieldProps(\"dateTime\")}\n                                            value={dateField}\n                                            onChange={handleDateFieldChange}\n                                        />\n                                        <FormErrorMessage>{formik.errors.dateTime}</FormErrorMessage>\n                                    </FormControl>\n                                    <FormControl isInvalid={formik.touched.reserveTime && formik.errors.reserveTime}>\n                                        <FormLabel htmlFor=\"reserveTime\">Time</FormLabel>\n                                        <Select\n                                            id=\"reserveTime\"\n                                            name=\"reserveTime\"\n                                            disabled={timeFieldLocked}\n                                            {...formik.getFieldProps(\"reserveTime\")}\n                                        >\n                                            {timeSlots.map((timeSlot) => <option key={timeSlot} value={timeSlot}>{timeSlot}</option>)}\n                                        </Select>\n                                        <FormErrorMessage>{formik.errors.reserveTime}</FormErrorMessage>\n                                    </FormControl>\n                                </HStack>\n                                <FormControl isInvalid={formik.touched.comment && formik.errors.comment}>\n                                    <FormLabel htmlFor=\"comment\">Your message</FormLabel>\n                                    <Textarea\n                                        id=\"comment\"\n                                        name=\"comment\"\n                                        height={100}\n                                        {...formik.getFieldProps(\"comment\")}\n                                    />\n                                    <FormErrorMessage>{formik.errors.comment}</FormErrorMessage>\n                                </FormControl>\n                                <Button\n                                    type={\"submit\"}\n                                    width={\"full\"}\n                                    rounded={\"md\"}\n                                    bgColor={\"#F4CE14\"}\n                                    color={\"black\"}\n                                    isLoading={isLoading}\n                                    isDisabled={reservedLocked}\n                                >\n                                    {reserved}\n                                </Button>\n                            </VStack>\n                        </form>\n\n                    </Box>\n                    <Box width={\"50%\"} padding={\"5%\"}>\n                        <Image src={formImage} rounded={\"md\"} />\n                    </Box>\n                </HStack>\n            </VStack>\n        </Box>\n    );\n};\nexport default ReserveSection;","/home/jrr/capstone_frontend_littlelemon/src/hooks/useSubmit.js",[],[],"/home/jrr/capstone_frontend_littlelemon/src/hooks/api.js",[],[],{"ruleId":"126","severity":1,"message":"127","line":88,"column":8,"nodeType":"128","endLine":88,"endColumn":18,"suggestions":"129"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.","ArrayExpression",["130"],{"desc":"131","fix":"132"},"Update the dependencies array to be: [formik, response]",{"range":"133","text":"134"},[2669,2679],"[formik, response]"]